%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
# NOTE: multiline matches won't match the 1st value on the next line so I add 1| 2| and so on.
name: "8th"
file_extensions:
  - "8th"
scope: source.8th

variables:
  operators: '[@=!\*\+\-/]'
  mathoperators: '({{operators}}|>[sn]|and|xor|or|not|invert|negate|min|max|mod|1[\+-])'
  preproc: '(#if|#else|#then|dbg:stop|dbg:prompt|locals:)'
  globalstack: '(2?dup|2?drop|r?swap|2?over|nip|tuck|-?rot|pick|roll|depth|dstack|fourth|third)'
  globalinc: '(lib(?>bin)?|needs|requires|with:)\s'
  globalcompiletime: '(p:|compile\??|i:|literal|recurse)'
  globalimmed: '(?<=^|\s)(0;|if;?|;;;?|else|''|;?then|repeat|again|until!?|while!?|caseof|when|loop-?|times|ahead|break)'
  globalkeyword: '(curry:?|sleep(?>-until)?|\(code\)|\(defer\)|\(dump\)|\(get[cs]\)|\(interp\)|\(log\)|\(stat\)|[-\+]hook|[-\+]listener|[-\+]ref|ref@|-?Inf\??|\.hook|\.needs|\.[#rs]|\.stats|\.ver|\.with|>clip|>json|>kind|\?:|appname|apropos|argc|args|assert|base|bits|build\?|buildver\?|bye|chdir|clip>|clone|clone-shallow|cold|compat-level|conflict|const|counting-allocations|curlang|decimal|defer:|deferred:|deg>rad|die|dump|e#|error\?|eval[!0]?|execnull|expect|extra[!@]|fnv|free|get[cs]|getcwd|getenv|handler|header|help|hex|jcall|jclass|jmethod|k32|last|listener@|lock(?>-to|ed\?)?|mark|memfree|mobile\?|name>(?>os|sem)|new|next-arg|noop|ns[:\?]|ns>l?s|null;?|off|on|onexit|only|op!|os(?>-names|>long-name|>name)?|pack|parse(?>-csv|ch|ln|ws)?|pool-clear(?>-all)?|prior|private|prompt|public|put[cs]|putslim|rad>deg|recurse-stack|reg[@!]|regbin@|remaining-args|rop!|s>ns|scriptdir|scriptfile|set(?>-wipe|env|jmp)|settings[!@]|sh\$?|space|step|throw(?>null)?|unlock|unpack|xchg)'
  globalrand: '(rand-(jit|jsf|native|normal|pcg|pct-seed|range|select)|randbuf-pcg|random)'
  globalrstack: '((?<=^|\s)(>r|r[>@!])|(r?(?>swap|rusage|stack|op!)))'
  globalsem: '(sem-(post|rm|wait\??)|sem(?>>name)?)'
  globaljson: '(json-(8th|nesting|pretty|throw)|json[>@])'
  vstringns: '(/scripts|<\+|=ic|>base64|append|base64>|clear|cmpi?|compress|days!|each(?>!|line)|escape|expand|fill|fmt|gershayim|globmatch|hexupr|insert|intl!?|lang|lc|len|months!|new|reduce|replace!?|rev|[lrt]sub|[rl]?trim|script\?|r?search|size|slice|str(?>fmap|fmt)|text-wrap|uc(?>s2>)?|utf8\?|zt)'
  vnumbersns: '([!-/<=>\^E]|\*/?|\+!?|/mod|1[+-]|abs|acos|asin|atan[2]?|band|between|bic|BIG(?>E|PI)|bin[tv]|bnot|bor|bxor|cast|ceil|clamp|cmp|comb|cosd?|exp(?>m1|mod)?|b?float|floor|frac|gcd|int|invmod|kind\?|lcm|ln|ln1p|max|median|min|f?mod|neg|odd\?|perm|PI|prime\?|quantize!?|r\+|range|rot32[lr]|round2?|rounding|running-variance(?>-finalize)?|sgn|sh[lr]|sind?|sqrt?|tand?|trunc|~=)'

contexts:
  main:
    - match: '(?<=^|\s)((?>\\|--) .*)'
      comment: line comment
      scope: comment.line.backslash.8th
      push:
        - match: '(\n)'
          pop: true

    - match: '(?<=^|\s)(\(\*)(?=\s)'
      comment: multiline comments for 8th
      push:
        - meta_scope: comment.block.multiline.8th
        - match: '(?<=^|\s)(\*\))(?=\s)'
          pop: true

    - match: '(?i:(?<=^|\s)(true|false)(?=\s))'
      scope: constant.language.8th
    - match: '(?<=^|\s)([-+]?(0x|0X|\$)[0-9a-fA-F]*)(?=\s)'
      scope: constant.numeric.hex.8th
    - match: '(?<=^|\s)(%?[01]+)(?=\s)'
      scope: constant.numeric.binary.8th
    - match: '(?<=^|\s)(&?[0-7]+)(?=\s)'
      scope: constant.numeric.octal.8th
    - match: '(?<=^|\s)([-+]?[#]?[0-9]+)(?=\s)'
      scope: constant.numeric.decimal.8th
    - match: '(?<=^|\s)([-+]?[0-9]*\.?[0-9]*[eE]?([-+]?[0-9]+))(?=\s)'
      scope: constant.numeric.complex.8th
      push:
        - meta_scope: constant.numeric.complex.2nd.8th
        - match: '([-+][0-9]*\.?[0-9]*[eE]?([-+]?[0-9]+i?))?(?=\s)'
          pop: true
    - match: '(?<=^|\s)([-+]?F[0-9]*\.?[0-9]*[eE]?([-+]?[0-9]+))(?=\s)'
      scope: constant.numeric.bigfloat.8th
    - match: '(?<=^|\s)([-+]?B[0-9]+)(?=\s)'
      scope: constant.numeric.bigint.8th
    - match: '(?<=^|\s)(''.)(?=\s)'
      scope: constant.numeric.ascii.8th
    - match: '(?<=^|\s)(([&^]\S)|(("|'')\S("|'')))(?=\s)'
      scope: constant.character.8th
    - match: '(?<=^|\s)(".*?)'
      scope: string.8th
      push:
        - meta_scope: string.content.8th
        - match: '(.*?")\s'
          pop: true

    - match: '(?<=^|\s)((constant|var,?))\s+'
      scope: storage.type.8th
      push:
        - meta_scope: string.type.8th
        - match: '(\w+)(?=\s)'
          pop: true

    - match: '(?<=^|\s)(;with)(?=\s)'
      scope: include.globalns.word.8th

    - match: '(?<=^|\s)(with:\s*?imap)(?=\s)'
      scope: include.with.imap.8th
      push:
        - include: imapwords
        - include: main
        - match: '(?<=^|\s)(;with)(?=\s)'
          pop: true

    - match: '{{globalinc}}'
      scope: include.globalns.word.8th
      push: includestring

    - match: '(?<=^|\s)(\{)(?=\s)'
      scope: map.8th
      push: mapdef

    - match: '(?<=^|\s)(\[)(?=\s)'
      scope: array.8th
      push: arraydef

    - match: '(?<=^|\s)(DEFER:|I:)\s*\S*(?=\s)'
      scope: string.unquoted.8th

    - match: '(quote (.).*\2)'
      scope: string.unquoted.8th

    - match: '(?<=^|\s){{globalimmed}}(?=\s)'
      scope: control.globalns.word.immediate.8th

    - match: '(?<=^|\s){{globalrand}}(?=\s)'
      scope: keyword.globalns.random.word.8th

    - match: '(?<=^|\s){{globalsem}}(?=\s)'
      scope: keyword.globalns.sem.word.8th

    - match: '(?<=^|\s){{globaljson}}(?=\s)'
      scope: keyword.globalns.json.word.8th

    - match: '(?<=^|\s){{globalkeyword}}(?=\s)'
      scope: keyword.globalns.8th

    - match: '(?<=^|\s){{globalstack}}(?=\s)'
      scope: peach.globalns.stack.immediate.8th

    - match: '(?<=^|\s){{globalrstack}}(?=\s)'
      scope: peach.globalns.rstack.immediate.8th

    - match: '(?<=^|\s){{globalcompiletime}}(?=\s)'
      scope: orange.globalns.immediate.other.8th

    - match: '(?<=^|\s){{mathoperators}}(?=\s)'
      scope: operator.8th

    - match: '(?<=^|\s)#! .*+'
      scope: preprocessor.linux.run.8th

    - match: '(?<=^|\s){{preproc}}(?=\s)'
      scope: preprocessor.8th

    - match: '(?<=^|\s)(null\?|array\?|string\?|break\?|compiling?|container\?|isa\?|map\?|number\?|same\?)(?=\s)'
      scope: keyword.compare.8th

    - match: '(?<=^)\s*((: +.*?)|[\(\)])(?=\s)'
      scope: green.function.8th

    - match: '(?<=^|\s)(;|i;|\(:\)|func:)(?=\s)'
      scope: green.function.8th

    - match: '(?<=^|\s)(a:)(?=\S)'
      comment: array namespace
      scope: storage.arrayns.8th
      push: arrayns

    - match: '(?<=^|\s)(app:)(?=\S)'
      comment: application namespace
      scope: orange.appns.8th
      push: appns

    - match: '(?<=^|\s)(b:)(?=\S)'
      comment: buffer namespace
      scope: storage.bufferns.8th
      push: bufferns

    - match: '(?<=^|\s)(\.|cr)(?=\s)'
      scope: io.keyword.8th

    - match: '(?<=^|\s)(f:)(?=\S)'
      comment: file namespace
      scope: io.filens.8th
      push: filens

    - match: '(?<=^|\s)(G:)(?=\S)'
      comment: global namespace
      scope: keyword.globalns.8th
      push: globalns

    - match: '(?<=^|\s)(h:)(?=\S)'
      comment: heap namespace
      scope: storage.heapns.8th
      push: heapns

    - match: '(?<=^|\s)(hw:)(?=\S)'
      comment: hardware namespace
      scope: support.hardwarens.8th
      push: hardwarens

    - match: '(?<=^|\s)(imap:)(?=\S)'
      comment: imap namespace
      scope: io.imapns.8th
      push: imapns

    - match: '(?<=^|\s)(m:)(?=\S)'
      comment: map namespace
      scope: storage.mapns.8th
      push: mapns

    - match: '(?<=^|\s)(n:)(?=\S)'
      comment: number namespace
      scope: cyan.numberns.8th
      push: numberns

    - match: '(?<=^|\s)(os:)(?=\S)'
      comment: os namespace
      scope: support.osns.8th
      push: osns

    - match: '(?<=^|\s)(ptr:)(?=\S)'
      comment: pointer namespace
      scope: storage.pointerns.8th
      push: pointerns

    - match: '(?<=^|\s)(pubsub:)(?=\S)'
      comment: pubsub namespace
      scope: io.pubsubns.8th
      push: pubsubns

    - match: '(?<=^|\s)(q:)(?=\S)'
      comment: queue namespace
      scope: storage.queuens.8th
      push: queuens

    - match: '(?<=^|\s)(s:)(?=\S)'
      comment: string namespace
      scope: string.stringns.8th
      push: stringns

    - match: '(?<=^|\s)(st:)(?=\S)'
      comment: stack namespace
      scope: peach.stackns.8th
      push: stackns

    - match: '(?<=^|\s)(t:)(?=\S)'
      comment: task namespace
      scope: gray.taskns.8th
      push: taskns

    - match: '(?<=^|\s)(w:)(?=\S)'
      comment: word namespace
      scope: define.wordns.8th
      push: wordns

    - match: '(?<=^|\s)(/)'
      comment: regex def
      scope: regex.exp.8th
      push: regexdef

    - match: '(?<=^|\s)(r:)(?=\S)'
      comment: regex namespace
      scope: regex.regexns.8th
      push: regexns

  mapdef:
    - meta_scope: class.map.contents.8th
    - match: '(?<=^|\s)(.*?):\s+(.*?)\s*(?=\s)'
      captures:
        1: string.map.contents.key.8th
        2: pink.map.contents.value.8th
    - match: '(?<=^|\s)(\})(?=\s)'
      pop: true

  arraydef:
    - meta_scope: class.array.contents.8th
    - match: '(?<=^|\s)(\])(?=\s)'
      pop: true

  regexdef:
    - meta_scope: regex.exp.8th
    - match: (/)
      pop: true

  endns:
    - match: (\s)
      pop: true

  arraywords:
    - match: '(xchg|[!\+=xy]|-|2each|2map[\+=]?|>map|@@?|_@|bsearch|centroid|clear|close|diff|dot|each(?>!|-slice)?|exists\?|filter|generate|group|indexof|insert|intersect|join|len|map\+?|mean(?>\&variance)?|new|op!|open|pop|push|qsort|randeach|reduce\+?|remove|rev|shift|suffle|slice\+?|slide|smear|sort|union|when\!?|x-each|zip)'
      scope: storage.arrayns.word.8th

  arrayns:
    - include: arraywords
    - include: endns

  appwords:
    - match: '(8thdir|asset|atrun|(?>base|data|sub)dir|current|exename|isgui|lowmem|main|oncrash|opts[!@]|orientation!?|pic|raise|restart|resumed|signal|standalone|suspended|sysquit|terminated|trap)'
      scope: orange.appns.word.8th

  appns:
    - include: appwords
    - include: endns

  bufferwords:
    - match: '([!\+/=@]|1[+-]|>base64|>hex|>mpack|append|base64>|bit[!@]|clear|compress|conv|each!?|each-slice|expand|fill|getb|hex>|len|mem>|move|mpack-ignore|mpack>|n\+|new|op|rev|search|shmem|slice|splice|ungetb|writable|xor)'
      scope: storage.bufferns.word.8th

  bufferns:
    - include: bufferwords
    - include: endns

  filewords:
    - match: '(abspath|append|associate|atime|canwrite\?|chmod|close|copy(?>dir)?|create|ctime|dir\?|dname|eachbuf|eachline|enssep|eof\?|exists\?|flush|fname|get(?>[bc]|line|mod)|glob(?>-nocase)?|homedir|include|launch|link[\?>]?|mkdir|mmap(?>-range\??)?|mtime|mv|open(?>-ro)?|print|read\??|relpath|rglob|rm(?>dir)?|seek|sep|size|slurp|sparse\?|stderr|stdin|stdout|tell|times|trash|truncate|unget[bc]|unzip(?>-entry)?|watch|write[n]?|zip(?>[\+@]|entry|new|open|save))'
      scope: io.filens.word.8th

  filens:
    - include: filewords
    - include: endns

  includestring:
    - meta_scope: string.include.8th
    - match: '([\w/\.]*)(?=\s)'
      pop: true

  globalns:
    - match: '(r(?>pick|roll))'
      scope: peach.globalns.rstack.immediate.8th
    - match: '{{mathoperators}}'
      scope: operator.8th
    - match: '{{preproc}}'
      scope: preprocessor.8th
    - match: '{{globalrstack}}'
      scope: peach.globalns.rstack.immediate.8th
    - match: '{{globalcompiletime}}'
      scope: orange.globalns.immediate.other.8th
    - match: '{{globalstack}}'
      scope: peach.globalns.stack.immediate.8th
    - match: '{{globalimmed}}'
      scope: control.globalns.word.immediate.8th
    - match: ((?>case|of|default):)
      scope: control.globalns.word.immediate.8th
    - match: '{{globalinc}}'
      scope: include.globalns.word.8th
      push: includestring
    - match: '{{globalrand}}'
      scope: keyword.globalns.random.word.8th
    - match: '{{globaljson}}'
      scope: keyword.globalns.json.word.8th
    - match: '{{globalsem}}'
      scope: keyword.globalns.sem.word.8th
    - match: '(;with)'
      scope: include.globalns.word.8th
    - match: '(-inf\?|[34n]drop|actor:|bi|c/does|2?dip|ENUM:|expect|FLAG:|inf\?|items_used|keep|name>os|NaN\?|next-arg|os>long-name|poke|(?>process|remaining)-args|SED-CHECK|settings(?>[@!]\[\]|@\??|!)|struct:|tlog|tri|words/?|)'
      scope: keyword.globalns.word.8th
    - match: '{{globalkeyword}}'
      scope: keyword.globalns.8th
    - include: endns

  heapwords:
    - match: '(\+|clear|len|max!|new|peek|pop|push|unique)'
      scope: storage.heapns.word.8th

  heapns:
    - include: heapwords
    - include: endns

  hardwarewords:
    - match: '(arm\?|camera-(?>fmt|img)|camera\??|cpu\?|device\?|displays\?|displaysize\?|finger-(?>match|support)|gpio(?>[!@]|-mmap)?|i2c(?>[@!]reg|[@!])?|is(?>round|watch)\?|mac\?|mem\?|model\?|poll|sensor|start|stop|uid\?)'
      scope: support.hardwarens.word.8th

  hardwarens:
    - include: hardwarewords
    - include: endns

  imapwords:
    - match: '(fetch-(?>full|uid-mail)|login|new|select-inbox|parse-response|writeln|searchids|fetch-mail|net@|logout|find-ok|>map)'
      scope: io.imapns.word.8th

  imapns:
    - include: imapwords
    - include: endns

  mapwords:
    - match: '([!+]\??|-|@[\?@]?|\[\]!|_[!@]|bitmap|clear|data|each|exists\?|filter|iter(?>-all)?|keys|len|map|new|op!|open|slice|vals|xchg|zip)'
      scope: storage.mapns.word.8th

  mapns:
    - include: mapwords
    - include: endns

  numberwords:
    - match: '{{vnumbersns}}'
      scope: cyan.numberns.word.8th

  numberns:
    - include: numberwords
    - include: endns

  oswords:
    - match: '(devname|env|lang|region)'
      scope: support.osns.word.8th

  osns:
    - include: oswords
    - include: endns

  pointerwords:
    - match: '(cast|len|pack|unpack(?>_orig)?)'
      scope: storage.pointerns.word.8th

  pointerns:
    - include: pointerwords
    - include: endns

  pubsubwords:
    - match: '(publish|qsize|subscribe)'
      scope: io.pubsubns.word.8th

  pubsubns:
    - include: pubsubwords
    - include: endns

  queuewords:
    - match: '(\+|clear|len|new|notify|overwrite|peek|pick|pop|push|remove|shift|size|slide|throwing|wait)'
      scope: storage.queuens.word.8th

  queuens:
    - include: queuewords
    - include: endns

  regexwords:
    - match: '(\+?\+?match|\+?/|@|len|new|rx|str)'
      scope: regex.regexns.word.8th

  regexns:
    - include: regexwords
    - include: endns

  stringwords:
    - match: '{{vstringns}}'
      scope: string.stringns.word.8th
    - match: '({{operators}})'
      scope: operator.stringns.8th

  stringns:
    - include: stringwords
    - include: endns

  stackwords:
    - match: '([\+\.]|clear|len|ndrop|new|op!|peek|pick|pop|push|roll|shift|size|slide|swap|throwing)'
      scope: peach.stackns.word.8th

  stackns:
    - include: stackwords
    - include: endns

  taskwords:
    - match: '([@!]|by-name|cirtask|def-(?>queue|stack)|done\?|err[!\?]|errno\?|getq|guitask|handler|kill|list|main|max-exceptions|name[!@]|notify|parent|pop|priority|push|q-(?>notify|wait)|qlen|result|set-affinity|setq|task(?>-n|-stop)?|wait)'
      scope: gray.taskns.word.8th

  taskns:
    - include: taskwords
    - include: endns

  wordwords:
    - match: ([!@]|\(is\)|alias:|cb|deprecate|exec\??|ffifail|find|forget|is|name|undo)
      scope: define.wordns.word.8th

  wordns:
    - include: wordwords
    - include: endns


